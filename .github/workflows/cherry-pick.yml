on:
  # pull_request_target: # TODO to set back
  pull_request:
    branches:
      - main
      - test_cherry-pick # TODO to remove
    types:
    - "labeled"
    - "closed"

jobs:
  fetch_labels:
    runs-on: ubuntu-latest
    # if: ${{ github.event.pull_request.state == 'closed' }} # TODO to enable
    outputs:
      labels: ${{ steps.save.outputs.labels }}
    env:
      LABELS: ${{ toJSON(github.event.pull_request.labels) }}
    steps:
      - name: Store matrix
        id: save
        run: |
          printf '%s\n' "${LABELS}" > labels.json
          cat labels.json
          matrix="$(cat labels.json | jq -c 'map(select(.name | startswith("milestone-")))')"
          echo "${matrix}"
          echo ::set-output name=labels::{\"include\":$(echo $matrix)}
  cherry_pick_release_branch_labels:
    runs-on: ubuntu-latest
    needs: fetch_labels
    strategy:
      matrix: ${{ fromJSON(needs.fetch_labels.outputs.labels) }}
      fail-fast: true
    name: Cherry pick for ${{ matrix.name }}
    steps:
      - name: Calculate release branch
        run: |
          label=${{ matrix.name }}
          echo "RELEASE_BRANCH=${label#milestone-}.x" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Perform cherry-pick
        # uses: carloscastrojumo/github-cherry-pick-action@v1.0.2
        uses: radtriste/github-cherry-pick-action@issue_9
        with:
          branch: "${{ env.RELEASE_BRANCH }}"
          title: "[${{ env.RELEASE_BRANCH }}] ${{ github.event.pull_request.title }}"
          body: "cherry-pick: ${{ github.event.pull_request.html_url }}"
          labels: |
            cherry-pick
          reviewers: |
            radtriste
            ${{ github.event.pull_request.user.login }}
  
